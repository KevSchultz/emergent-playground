openapi: '3.0.3'

info:
  title: Emergent Playground API
  version: '0.1.0'

servers:
  - url: https://localhost:3000/api

paths:
  /register:
    post:
      description: Register
      requestBody:
        description: Request Body with Username, Email and Password. All fields are required.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationCredentials'
      responses:
        200:
          description: Sets an HttpOnly cookie for authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /login:
    post:
      description: Login
      requestBody:
        description: Request Body with Email and Password. All fields are required.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        200:
          description: Sets an HttpOnly cookie for authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /logout:
    post:
      description: Logout
      responses:
        200:
          description: Clears the HttpOnly cookie for authentication
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /test:
    get:
      description: Test route to check if the token is working
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /upload:
    post:
      description: Upload a file
      parameters:
        - in: query
          name: title
          schema:
            type: string
            description: The title of the file
      requestBody:
        description: Request Body with a file. All fields are required.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                poststate:
                  type: string
                  format: binary
                postproperties:
                  type: string
                  format: binary
            encoding:
              poststate:
                contentType: application/octet-stream
              postproperties:
                contentType: application/octet-stream              
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /downloadstate:
    get:
      description: Download the state of the cellular automata as a binary blob
      parameters:
        - name: postid
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /downloadproperties:
    get:
      description: Download the properties of the cellular automata as a binary blob
      parameters:
        - name: postid
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /list:
    get:
      description: List posts with sorting
      parameters:
        - name: sorting
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  type: array
                  items:
                    type: object
                    properties:
                      postid:
                        type: string
                      username:
                        type: string
                      title:
                        type: string
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /username:
    get:
      description: Get username from user ID in cookie
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
                        
components:
  schemas:
    UnexpectedError:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    RegistrationCredentials:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - username
        - email
        - password

    Credentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password