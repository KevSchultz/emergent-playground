openapi: '3.0.3'

info:
  title: Emergent Playground API
  version: '0.1.0'

servers:
  - url: https://localhost:3000/api

paths:
  /register:
    post:
      description: Register
      requestBody:
        description: Request Body with Username, Email and Password. All fields are required.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationCredentials'
      responses:
        200:
          description: Access Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /login:
    post:
      description: Login
      requestBody:
        description: Request Body with Email and Password. All fields are required.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        200:
          description: Access Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
  /test:
    get:
      security:
        - bearerAuth: []
      description: Test route to check if the token is working
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedError'
                
components:
  schemas:
    UnexpectedError:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    RegistrationCredentials:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - username
        - email
        - password

    Credentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    User:
      type: object
      properties:
        accessToken:
          type: string
      required:
        - accessToken

  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
